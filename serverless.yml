service: aws-nodejs # NOTE: update this with your service name
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs14.5
  stackTags:
    #Name: ${self:app}-${self:service}
    #service_name: ${self:service}
    environment: ${self:custom.stage}
    # resource_owner: #Use your Bitbucket Name here
    business_unit: RD:Development
    managed_by: sls
              
# you can define service wide environment variables here
#  environment:
#    myvar1: value1

functions:
  example:
    handler: src/functions/example.example
    #environment:
    #  env-var-1: env-value-1
    #events:
    #  - httpApi:
    #      path: /url
    #      method: get
    #iamRoleStatementsName: ${self:service}-example-IAMRole-${self:custom.stage}
    #iamRoleStatements:
    #  - Effect: Allow
    #    Action:
    #      - dynamodb:PutItem
    #    Resource: "arn:aws:dynamodb:*:*:table/${param:table_name}"
    tags:
      #Name: ${self:service}-${self:custom.stage}-example
      infrastructure_tier: Lambda


plugins:
  - serverless-tag-api-gateway
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters
  - serverless-mocha-plugin
  - serverless-webpack
  #- serverless-domain-manager

custom:
  serverless-mocha-plugin:
    testTemplate: templates/testTemplate.ejs
    functionTemplate: templates/functionTemplate.ejs
  apiGatewayTags:
    #Name: ${self:service}-APIGateway
    environment: ${self:custom.stage}
    #resource_owner: #Use Bitbucket username
    business_unit: RD:Development
    managed_by: sls
    #stackName: ${self:app}-${self:service}
    infrastructure_tier: APIGateway
  webpack:
    webpackConfig: 'webpack.config.js'   # Name of webpack configuration file
    includeModules:
      forceExclude:
        - aws-sdk
    packager: 'npm'   # Packager that will be used to package your external modules
    excludeFiles: src/test/**/*.js # Provide a glob for files to ignore
    #customDomain:
    #  domainName: ${self:custom.stage}-api.${param:domain} 
    #  basePath: ''
    #  stage: ${self:custom.stage}
    #  createRoute53Record: true
    #  endpointType: 'regional'
    #  securityPolicy: tls_1_2
    #  apiType: http
    #  autoDomain: true
    #  certificateArn: ${param:cert}
  region: ${opt:region, self:provider.region}
  stage: ${opt:stage, self:provider.stage}
